#                      ),
# ),
fluidPage(
tabsetPanel(
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Platforms Ranking',
'</span>'),
fluidRow(
htmlOutput("bartitle"),
splitLayout(cellWidths = c("50%", "50%"),
imageOutput('pic_2'),
tableOutput('DF')))
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Users & Rating',
'</span>'),
htmlOutput("scattertitle"),
fluidPage(plotlyOutput('graph_2'),
htmlOutput("click")
)
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Drama Cloud',
'</span>'),
htmlOutput("Cloudtitle"),
imageOutput('pic_1'))
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
# output$graph_1 <- renderPlot({
# ggplot(lb, aes(x=as.factor(rno), y=order+100))+
#   geom_bar(stat='identity', fill=color_1)+
#   ylim(-100,600)+
#   theme_void()+
#   coord_polar(start=0)+
#   geom_text(data=lb,
#             aes(x=rno, y=order+150, label=platform, hjust=hjust),
#             color='black', size=7,
#             fontface = 'bold',
#             angle=lb$angle, inherit.aes=FALSE,
#             family="my1")
# })
output$graph_2 <- renderPlotly({
ggplotly(rating, tooltip = 'text', source = "Plot1")
})
output$pic_1 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\WordCloud.png",
width = width-200,
height = width * 0.75-200)
})
output$pic_2 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\CircleBarPlot.png",
width = 400,
height = 400)
})
output$click <- renderUI({
d <- event_data("plotly_click", source = 'Plot1')
if (!is.null(d))
{
HTML('<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[Description]',
'</span>',
'<br>',
'<br>',
'<span style=" font: italic 1.5em/1.5em Comic Sans MS, serif ;">',
paste(d$customdata),
'</span>')
}
})
output$bartitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ TOP 20 Platforms ]',
'</span>',
'</div>')
})
output$scattertitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Users & Rating ]',
'</span>',
'</div>')
})
output$Cloudtitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Drama Cloud ]',
'</span>',
'</div>')
})
output$DF <- renderTable({
word_data_top20_view
})
}
ui <- fluidPage(
titlePanel(
h1(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'&nbsp&nbspK-Drama Data Visualization',
'</span>'))
),
# sidebarPanel(width = 3,
#   checkboxGroupInput('showvars',
#                      HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
#                           'Choose OTT Platform',
#                           '</span>'),
#                      # names(penguins),
#                      # selected = names(penguins)
#                      ),
# ),
fluidPage(
tabsetPanel(
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Platforms Ranking',
'</span>'),
fluidRow(
htmlOutput("bartitle"),
splitLayout(cellWidths = c("50%", "50%"),
imageOutput('pic_2'),
tableOutput('DF')))
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Users & Rating',
'</span>'),
htmlOutput("scattertitle"),
fluidPage(plotlyOutput('graph_2'),
htmlOutput("click")
)
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Drama Cloud',
'</span>'),
htmlOutput("Cloudtitle"),
imageOutput('pic_1'))
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
# output$graph_1 <- renderPlot({
# ggplot(lb, aes(x=as.factor(rno), y=order+100))+
#   geom_bar(stat='identity', fill=color_1)+
#   ylim(-100,600)+
#   theme_void()+
#   coord_polar(start=0)+
#   geom_text(data=lb,
#             aes(x=rno, y=order+150, label=platform, hjust=hjust),
#             color='black', size=7,
#             fontface = 'bold',
#             angle=lb$angle, inherit.aes=FALSE,
#             family="my1")
# })
output$graph_2 <- renderPlotly({
ggplotly(rating, tooltip = 'text', source = "Plot1")
})
output$pic_1 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\WordCloud.png",
width = width-200,
height = width * 0.75-200)
})
output$pic_2 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\CircleBarPlot.png",
width = 600,
height = 600)
})
output$click <- renderUI({
d <- event_data("plotly_click", source = 'Plot1')
if (!is.null(d))
{
HTML('<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[Description]',
'</span>',
'<br>',
'<br>',
'<span style=" font: italic 1.5em/1.5em Comic Sans MS, serif ;">',
paste(d$customdata),
'</span>')
}
})
output$bartitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ TOP 20 Platforms ]',
'</span>',
'</div>')
})
output$scattertitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Users & Rating ]',
'</span>',
'</div>')
})
output$Cloudtitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Drama Cloud ]',
'</span>',
'</div>')
})
output$DF <- renderTable({
word_data_top20_view
})
}
ui <- fluidPage(
titlePanel(
h1(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'&nbsp&nbspK-Drama Data Visualization',
'</span>'))
),
# sidebarPanel(width = 3,
#   checkboxGroupInput('showvars',
#                      HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
#                           'Choose OTT Platform',
#                           '</span>'),
#                      # names(penguins),
#                      # selected = names(penguins)
#                      ),
# ),
fluidPage(
tabsetPanel(
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Platforms Ranking',
'</span>'),
fluidRow(
htmlOutput("bartitle"),
splitLayout(cellWidths = c("50%", "50%"),
imageOutput('pic_2'),
tableOutput('DF')))
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Users & Rating',
'</span>'),
htmlOutput("scattertitle"),
fluidPage(plotlyOutput('graph_2'),
htmlOutput("click")
)
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Drama Cloud',
'</span>'),
htmlOutput("Cloudtitle"),
imageOutput('pic_1'))
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
# output$graph_1 <- renderPlot({
# ggplot(lb, aes(x=as.factor(rno), y=order+100))+
#   geom_bar(stat='identity', fill=color_1)+
#   ylim(-100,600)+
#   theme_void()+
#   coord_polar(start=0)+
#   geom_text(data=lb,
#             aes(x=rno, y=order+150, label=platform, hjust=hjust),
#             color='black', size=7,
#             fontface = 'bold',
#             angle=lb$angle, inherit.aes=FALSE,
#             family="my1")
# })
output$graph_2 <- renderPlotly({
ggplotly(rating, tooltip = 'text', source = "Plot1")
})
output$pic_1 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\WordCloud.png",
width = width-200,
height = width * 0.75-200)
})
output$pic_2 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\CircleBarPlot.png",
width = 600,
height = 600)
})
output$click <- renderUI({
d <- event_data("plotly_click", source = 'Plot1')
if (!is.null(d))
{
HTML('<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[Description]',
'</span>',
'<br>',
'<br>',
'<span style=" font: italic 1.5em/1.5em Comic Sans MS, serif ;">',
paste(d$customdata),
'</span>')
}
})
output$bartitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ TOP 20 Platforms ]',
'</span>',
'</div>')
})
output$scattertitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Users & Rating ]',
'</span>',
'</div>')
})
output$Cloudtitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Drama Cloud ]',
'</span>',
'</div>')
})
output$DF <- renderTable({
word_data_top20_view
})
}
ui <- fluidPage(
titlePanel(
h1(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'&nbsp&nbspK-Drama Data Visualization',
'</span>'))
),
# sidebarPanel(width = 3,
#   checkboxGroupInput('showvars',
#                      HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
#                           'Choose OTT Platform',
#                           '</span>'),
#                      # names(penguins),
#                      # selected = names(penguins)
#                      ),
# ),
fluidPage(
tabsetPanel(
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Platforms Ranking',
'</span>'),
fluidRow(
htmlOutput("bartitle"),
splitLayout(cellWidths = c("70%", "30%"),
imageOutput('pic_2'),
tableOutput('DF')))
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Users & Rating',
'</span>'),
htmlOutput("scattertitle"),
fluidPage(plotlyOutput('graph_2'),
htmlOutput("click")
)
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Drama Cloud',
'</span>'),
htmlOutput("Cloudtitle"),
imageOutput('pic_1'))
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
# output$graph_1 <- renderPlot({
# ggplot(lb, aes(x=as.factor(rno), y=order+100))+
#   geom_bar(stat='identity', fill=color_1)+
#   ylim(-100,600)+
#   theme_void()+
#   coord_polar(start=0)+
#   geom_text(data=lb,
#             aes(x=rno, y=order+150, label=platform, hjust=hjust),
#             color='black', size=7,
#             fontface = 'bold',
#             angle=lb$angle, inherit.aes=FALSE,
#             family="my1")
# })
output$graph_2 <- renderPlotly({
ggplotly(rating, tooltip = 'text', source = "Plot1")
})
output$pic_1 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\WordCloud.png",
width = width-200,
height = width * 0.75-200)
})
output$pic_2 <- renderImage(deleteFile = F,{
width  <- session$clientData$output_pic_1_width
height <- session$clientData$output_pic_1_height
list(src = "etc\\CircleBarPlot.png",
width = 600,
height = 600)
})
output$click <- renderUI({
d <- event_data("plotly_click", source = 'Plot1')
if (!is.null(d))
{
HTML('<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[Description]',
'</span>',
'<br>',
'<br>',
'<span style=" font: italic 1.5em/1.5em Comic Sans MS, serif ;">',
paste(d$customdata),
'</span>')
}
})
output$bartitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ TOP 20 Platforms ]',
'</span>',
'</div>')
})
output$scattertitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Users & Rating ]',
'</span>',
'</div>')
})
output$Cloudtitle <- renderUI({
HTML('<br>',
'<div calss="center">',
'<span style=" font: italic bold 2em/1.5em Comic Sans MS, serif ;">',
'[ Drama Cloud ]',
'</span>',
'</div>')
})
output$DF <- renderTable({
word_data_top20_view
})
}
ui <- fluidPage(
titlePanel(
h1(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'&nbsp&nbspK-Drama Data Visualization',
'</span>'))
),
# sidebarPanel(width = 3,
#   checkboxGroupInput('showvars',
#                      HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
#                           'Choose OTT Platform',
#                           '</span>'),
#                      # names(penguins),
#                      # selected = names(penguins)
#                      ),
# ),
fluidPage(
tabsetPanel(
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Platforms Ranking',
'</span>'),
fluidRow(
htmlOutput("bartitle"),
splitLayout(cellWidths = c("70%", "30%"),
imageOutput('pic_2'),
tableOutput('DF')))
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Users & Rating',
'</span>'),
htmlOutput("scattertitle"),
fluidPage(plotlyOutput('graph_2'),
htmlOutput("click")
)
),
tabPanel(HTML('<span style=" font: italic bold 1em Comic Sans MS, serif ;">',
'Drama Cloud',
'</span>'),
htmlOutput("Cloudtitle"),
imageOutput('pic_1'))
)
)
)
shinyApp(ui, server)
renv
renv::activate()
shinyApp(ui, server)
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
shiny::runApp("Shiny_Code.R")
exity
exit
r
R
pwd
rq()
q()
